/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TermsAndConditionsIndexImport } from './routes/terms-and-conditions/index'
import { Route as PrivacyPolicyIndexImport } from './routes/privacy-policy/index'
import { Route as HowToUseIndexImport } from './routes/how-to-use/index'
import { Route as AboutIndexImport } from './routes/about/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TermsAndConditionsIndexRoute = TermsAndConditionsIndexImport.update({
  id: '/terms-and-conditions/',
  path: '/terms-and-conditions/',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyPolicyIndexRoute = PrivacyPolicyIndexImport.update({
  id: '/privacy-policy/',
  path: '/privacy-policy/',
  getParentRoute: () => rootRoute,
} as any)

const HowToUseIndexRoute = HowToUseIndexImport.update({
  id: '/how-to-use/',
  path: '/how-to-use/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/how-to-use/': {
      id: '/how-to-use/'
      path: '/how-to-use'
      fullPath: '/how-to-use'
      preLoaderRoute: typeof HowToUseIndexImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy/': {
      id: '/privacy-policy/'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyIndexImport
      parentRoute: typeof rootRoute
    }
    '/terms-and-conditions/': {
      id: '/terms-and-conditions/'
      path: '/terms-and-conditions'
      fullPath: '/terms-and-conditions'
      preLoaderRoute: typeof TermsAndConditionsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/how-to-use': typeof HowToUseIndexRoute
  '/privacy-policy': typeof PrivacyPolicyIndexRoute
  '/terms-and-conditions': typeof TermsAndConditionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/how-to-use': typeof HowToUseIndexRoute
  '/privacy-policy': typeof PrivacyPolicyIndexRoute
  '/terms-and-conditions': typeof TermsAndConditionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about/': typeof AboutIndexRoute
  '/how-to-use/': typeof HowToUseIndexRoute
  '/privacy-policy/': typeof PrivacyPolicyIndexRoute
  '/terms-and-conditions/': typeof TermsAndConditionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/how-to-use'
    | '/privacy-policy'
    | '/terms-and-conditions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/how-to-use'
    | '/privacy-policy'
    | '/terms-and-conditions'
  id:
    | '__root__'
    | '/'
    | '/about/'
    | '/how-to-use/'
    | '/privacy-policy/'
    | '/terms-and-conditions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutIndexRoute: typeof AboutIndexRoute
  HowToUseIndexRoute: typeof HowToUseIndexRoute
  PrivacyPolicyIndexRoute: typeof PrivacyPolicyIndexRoute
  TermsAndConditionsIndexRoute: typeof TermsAndConditionsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutIndexRoute: AboutIndexRoute,
  HowToUseIndexRoute: HowToUseIndexRoute,
  PrivacyPolicyIndexRoute: PrivacyPolicyIndexRoute,
  TermsAndConditionsIndexRoute: TermsAndConditionsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about/",
        "/how-to-use/",
        "/privacy-policy/",
        "/terms-and-conditions/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/how-to-use/": {
      "filePath": "how-to-use/index.tsx"
    },
    "/privacy-policy/": {
      "filePath": "privacy-policy/index.tsx"
    },
    "/terms-and-conditions/": {
      "filePath": "terms-and-conditions/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
